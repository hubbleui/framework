@function str-replace($string, $search, $replace: '')
{
    $index: str-index($string, $search);
  
    @if $index
    {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
  
    @return $string;
}
@function color-name-from-var($colorVar)
{
    @return str-replace(str-replace($colorVar, ')', ''),  'var(--', '');
}

// Standard buttons
@mixin button($color, $background)
{
    $colorName : color-name-from-var($background);
    $levelBase: if($colorName == 'hb-on-primary', var(--#{$colorName}-800), $background);
    $levelHvr:  if($colorName == 'hb-on-primary', 600, 500);
    $levelActv: if($colorName == 'hb-on-primary', 900, 600);

    // Base
    --hb-btn-color: #{$color};
    --hb-btn-bg-color: #{$levelBase};

    // Hover
    --hb-btn-bg-color-hover: var(--#{$colorName}-#{$levelHvr});

    // Active
    --hb-btn-color-active: #{$color};
    --hb-btn-bg-color-active: var(--#{$colorName}-#{$levelActv});
    --hb-btn-box-shadow-active: none;

    // Loader / Icon
    --hb-btn-loader-color: #{$color};
    --hb-btn-color-hover: #{$color};
}

// Outline buttons
@mixin button-outline($color)
{
    $colorName: color-name-from-var($color);

    @if $colorName == 'hb-on-primary'
    {
        $colorName: 'hb-white';
        $color:  var(--hb-white);
    }

    // Base
    --hb-btn-color: #{$color};
    --hb-btn-bg-color: transparent;
    --hb-btn-border:  1px solid #{$color};
    --hb-btn-box-shadow: none;

    // Hover
    --hb-btn-color-hover: #{$color};
    --hb-btn-bg-color-hover: var(--#{$colorName}-100);

    // Active
    --hb-btn-color-active: #{$color};
    --hb-btn-bg-color-active: var(--#{$colorName}-200);

    // Icon / Loader
    --hb-btn-loader-color: #{$color};
}

// Pure buttons
@mixin button-pure($color)
{
    $colorName: color-name-from-var($color);

    @if $colorName == 'hb-on-primary'
    {
        $colorName: 'hb-white';
        $color:  var(--hb-white);
    }

    // Base
    --hb-btn-color: #{$color};
    --hb-btn-bg-color :transparent;
    --hb-btn-box-shadow: none;

    // Hover
    --hb-btn-color-hover: #{$color};
    --hb-btn-bg-color-hover: var(--#{$colorName}-100); 
    
    // Active
    --hb-btn-color-active: #{$color};
    --hb-btn-bg-color-active :var(--#{$colorName}-200);

    // Icon / Loader
    --hb-btn-loader-color: #{$color};
}

// Color variants
@each $context, $colors in $contexts
{    
    .btn.btn-#{$context}
    {
        @include button( map-get($colors, "contrast"), map-get($colors, "color"));
    }
}

// Outline variants
.btn.btn-outline
{
    @include button-outline( var(--hb-gray) );
}
@each $context, $colors in $contexts
{    
    .btn.btn-#{$context}.btn-outline
    {
        @include button-outline( map-get($colors, "color") );
    }
}

// Pure variants
.btn.btn-pure
{
    @include button-pure( var(--hb-gray) );
}
@each $context, $colors in $contexts
{
    .btn.btn-#{$context}.btn-pure
    {
        @include button-pure( map-get($colors, "color") );
    }
}