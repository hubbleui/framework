// Breakpoints
@mixin media-breakpoint-up($name) {
	$width: map-get($breakpoints, $name);
	@if $width
    {
		@media (min-width: $width) {
			@content;
		}
	}
	@else
    {
		@media (min-width: $name) {
            @content;
        }
	}
  	
}
@mixin media-breakpoint-down($name) {
  	$width: map-get($breakpoints, $name);
	@if $width
    {
		@media (max-width: $width){
			@content;
		}
	}
	@else
    {
        @media (max-width: $name){
            @content;
        }
	}
}

// Retina
@mixin media-retina($ratio : 1.25) {
    @media only screen and (-o-min-device-pixel-ratio: $ratio),
       only screen and (-webkit-min-device-pixel-ratio: $ratio),
       only screen and (min--moz-device-pixel-ratio: $ratio),
       only screen and (min-device-pixel-ratio: $ratio),
       only screen and (min-resolution: #{$ratio}dppx) {
        @content;
    }
}

// Raised
@mixin raised($level : 1)
{
    @if $level == 1
    {
        box-shadow: $raised-level-one;
        transition: box-shadow $base-easing-time $base-easing;
        &:hover
        {
            box-shadow: $raised-level-one-hover;
        }
        &:active
        {
            box-shadow: none;
        }
    }
    @else if $level == 2
    {
        box-shadow: $raised-level-two;
        transition: box-shadow $base-easing-time $base-easing;
        &:hover
        {
            box-shadow: $raised-level-two-hover;
        }
        &:active
        {
            box-shadow: none;
        }
    }
    @else if $level == 3
    {
        box-shadow: $raised-level-three;
        transition: box-shadow $base-easing-time $base-easing;
        &:hover
        {
            box-shadow: $raised-level-three-hover;
        }
        &:active
        {
            box-shadow: none;
        }
    }
}

//================ PRIVATE ================//
// Utility
@function _minusPercent($value, $percentage) {
	$diff: $value * ($percentage / 100);
	@return $value - $diff;
}
@function _addPercent($value, $percentage) {
	$diff: $value * ($percentage / 100);
	@return $value + $diff;
}

// Font smoothing
@mixin _fontSmooth() {
	@if $font-smoothing {
      text-rendering: optimizeLegibility;
      font-smoothing: antialiased;
   		-webkit-font-smoothing: antialiased;
    	-moz-osx-font-smoothing: grayscale;
  }
}

// Text ellipsis
@mixin _ellipsis {
	overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Clearfix
@mixin _clearfix {
	&:after {
    	content: "";
    	display: table;
    	clear: both;
  	}
}

// Unstyled button
@mixin button-unstyled() {
    background-color: transparent;
    border: none;
    outline: none;
    cursor: pointer;

    &:hover,
    &.hover,
    &:active,
    &.active {
        background-color: transparent;
        border: none;
        outline: none;
    }
}

// icons
@mixin line-icon
{
    display: inline-block;
    font: normal normal normal 14px/1 'PicIcon';
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
@mixin glyph-icon
{
    display: inline-block;
    font: normal normal normal 14px/1 'IcoMoon';
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
@mixin center-horizontal
{
    float: none;
    margin-left: auto;
    margin-right: auto;
}
@mixin center-vertical
{
    position: absolute;
    top: 50%;
    left: 50%;
}
