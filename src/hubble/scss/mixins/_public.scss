// Breakpoints
@mixin media-breakpoint-up($name)
{
    $width: map-get($breakpoints, $name);
    @if $width
    {
        @media (min-width: $width)
        {
            @content;
        }
    }
    @else
    {
        @media (min-width: $name)
        {
            @content;
        }
    }
}
@mixin media-breakpoint-down($name)
{
    $width: map-get($breakpoints, $name);
    @if $width
    {
        @media (max-width: $width)
        {
            @content;
        }
    }
    @else
    {
        @media (max-width: $name)
        {
            @content;
        }
    }
}

// Retina
@mixin media-retina($ratio : 1.25)
{
    @media only screen and (-o-min-device-pixel-ratio: $ratio),
       only screen and (-webkit-min-device-pixel-ratio: $ratio),
       only screen and (min--moz-device-pixel-ratio: $ratio),
       only screen and (min-device-pixel-ratio: $ratio),
       only screen and (min-resolution: #{$ratio}dppx)
    {
        @content;
    }
}


// Icon
@mixin glyph-icon
{
    display: inline-block;
    font: normal normal normal 14px/1 'IcoMoon';
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
@mixin center-horizontal
{
    float: none;
    margin-left: auto;
    margin-right: auto;
}
@mixin center-vertical
{
    position: absolute;
    top: 50%;
    left: 50%;
}
// Raised
@mixin raised($level : 1)
{
    @if $level == 1
    {
        box-shadow: $raised-level-one;
        transition: box-shadow $base-easing-time $base-easing;
        &:hover
        {
            box-shadow: $raised-level-one-hover;
        }
        &:active
        {
            box-shadow: none;
        }
    }
    @else if $level == 2
    {
        box-shadow: $raised-level-two;
        transition: box-shadow $base-easing-time $base-easing;
        &:hover
        {
            box-shadow: $raised-level-two-hover;
        }
        &:active
        {
            box-shadow: none;
        }
    }
    @else if $level == 3
    {
        box-shadow: $raised-level-three;
        transition: box-shadow $base-easing-time $base-easing;
        &:hover
        {
            box-shadow: $raised-level-three-hover;
        }
        &:active
        {
            box-shadow: none;
        }
    }
}

@mixin raise($varname, $level : 1, $color: #000000)
{
    @if $level == 1
    {
        #{$varname} : 0px 2px 1px -1px rgba(_darker($color, 30%), 0.2), 0px 1px 1px 0px rgba(_darker($color, 30%), 0.14), 0px 1px 3px 0px rgba(_darker($color, 30%), 0.12);
        #{$varname}-hover : 0 1px 1px rgba(_darker($color, 30%), 0.16), 0 1px 3px rgba(_darker($color, 30%), 0.23);
        #{$varname}-active : none;
        transition: box-shadow $base-easing-time $base-easing;
    }
    @else if $level == 2
    {
        #{$varname} :  0 1px 3px rgba(_darker($color, 30%), 0.12), 0 1px 2px rgba(_darker($color, 30%), 0.24);
        #{$varname}-hover : 0 3px 6px rgba(_darker($color, 30%), 0.16), 0 3px 6px rgba(_darker($color, 30%), 0.23);
        #{$varname}-active : none;
        transition: box-shadow $base-easing-time $base-easing;
    }
    @else if $level == 3
    {
        #{$varname}: rgba(_darker($color, 30%), 0.20) 0px 5px 5px -3px, rgba(_darker($color, 30%), 0.14) 0px 8px 10px 1px, rgba(_darker($color, 30%), 0.12) 0px 3px 14px 2px ;
        #{$varname}-hover: 0 10px 20px rgba(_darker($color, 30%), 0.19), 0 6px 6px rgba(_darker($color, 30%), 0.23);
        #{$varname}-active : none;
        transition: box-shadow $base-easing-time $base-easing;
    }
}

@mixin button-unstyled()
{
    background-color: transparent;
    border: none;
    outline: none;
    cursor: pointer;

    &:hover,
    &.hover,
    &:active,
    &.active
    {
        background-color: transparent;
        border: none;
        outline: none;
    }
}